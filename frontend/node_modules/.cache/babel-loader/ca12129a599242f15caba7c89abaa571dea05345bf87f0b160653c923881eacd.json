{"ast":null,"code":"var _jsxFileName = \"D:\\\\pythontest\\\\Detection of floating objects in rivers\\\\frontend\\\\src\\\\pages\\\\LogManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, message } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE;\nconst LogManagement = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchLogs();\n  }, []);\n  const fetchLogs = async () => {\n    setLoading(true);\n    try {\n      const userId = localStorage.getItem('user_id');\n      const response = await axios.get(`${API_BASE}/api/logs/user/${userId}`);\n      setLogs(response.data);\n    } catch (error) {\n      message.error('获取日志信息失败！');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const columns = [{\n    title: '日志ID',\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: '用户ID',\n    dataIndex: 'user_id',\n    key: 'user_id'\n  }, {\n    title: '操作',\n    dataIndex: 'action',\n    key: 'action'\n  }, {\n    title: '操作时间',\n    dataIndex: 'action_time',\n    key: 'action_time'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '50px 0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u65E5\\u5FD7\\u7BA1\\u7406\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: logs,\n      loading: loading,\n      rowKey: \"id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(LogManagement, \"ZGhkABdExOczY9obwOnN8RHRH3E=\");\n_c = LogManagement;\nexport default LogManagement;\nvar _c;\n$RefreshReg$(_c, \"LogManagement\");","map":{"version":3,"names":["React","useState","useEffect","Table","message","axios","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","LogManagement","_s","logs","setLogs","loading","setLoading","fetchLogs","userId","localStorage","getItem","response","get","data","error","columns","title","dataIndex","key","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","dataSource","rowKey","_c","$RefreshReg$"],"sources":["D:/pythontest/Detection of floating objects in rivers/frontend/src/pages/LogManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, message } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE;\r\n\r\nconst LogManagement = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchLogs();\r\n  }, []);\r\n\r\n  const fetchLogs = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const userId = localStorage.getItem('user_id');\r\n      const response = await axios.get(`${API_BASE}/api/logs/user/${userId}`);\r\n      setLogs(response.data);\r\n    } catch (error) {\r\n      message.error('获取日志信息失败！');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { title: '日志ID', dataIndex: 'id', key: 'id' },\r\n    { title: '用户ID', dataIndex: 'user_id', key: 'user_id' },\r\n    { title: '操作', dataIndex: 'action', key: 'action' },\r\n    { title: '操作时间', dataIndex: 'action_time', key: 'action_time' }\r\n  ];\r\n\r\n  return (\r\n    <div style={{ padding: '50px 0' }}>\r\n      <h2>日志管理</h2>\r\n      <Table columns={columns} dataSource={logs} loading={loading} rowKey=\"id\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogManagement; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,OAAO,QAAQ,MAAM;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MAC9C,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,GAAGf,QAAQ,kBAAkBW,MAAM,EAAE,CAAC;MACvEJ,OAAO,CAACO,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,WAAW,CAAC;IAC5B,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMS,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,MAAM;IAAEC,SAAS,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAK,CAAC,EAC7C;IAAEF,KAAK,EAAE,MAAM;IAAEC,SAAS,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAU,CAAC,EACvD;IAAEF,KAAK,EAAE,IAAI;IAAEC,SAAS,EAAE,QAAQ;IAAEC,GAAG,EAAE;EAAS,CAAC,EACnD;IAAEF,KAAK,EAAE,MAAM;IAAEC,SAAS,EAAE,aAAa;IAAEC,GAAG,EAAE;EAAc,CAAC,CAChE;EAED,oBACEtB,OAAA;IAAKuB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAChCzB,OAAA;MAAAyB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACb7B,OAAA,CAACJ,KAAK;MAACuB,OAAO,EAAEA,OAAQ;MAACW,UAAU,EAAEvB,IAAK;MAACE,OAAO,EAAEA,OAAQ;MAACsB,MAAM,EAAC;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAlCID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}